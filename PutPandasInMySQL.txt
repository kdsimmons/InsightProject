import pandas as pd
import pymysql as mdb

# create pandas dataframe called pandadf

def convert_to_sql(pandadf):
    mysqlauth = pd.DataFrame.from_csv('mysql_user.csv')
    user = mysqlauth.username[0]
    password = mysqlauth.password[0]

    con = mdb.connect('localhost', user, password, 'charity_data')
    with con:
        cur = con.cursor()
        
        # set up table
        cur.execute("DROP TABLE IF EXISTS charities_sql")
        cur.execute("\
            CREATE TABLE charities_sql(\
                id INT PRIMARY KEY AUTO_INCREMENT,\
                name VARCHAR(255),\
                address VARCHAR(255),\
                city VARCHAR(255),\
                link VARCHAR(255),\
                bbb_link VARCHAR(255),\
                facebook_link VARCHAR(255),\
                twitter_link VARCHAR(255),\
                bbb_accred VARCHAR(255),\
                char_nav_score FLOAT(8,4),\
                facebook_likes INT,\
                twitter_followers INT\
           )"\
        ) 
        
        char_nav_score_placeholder = 0 # not scraped yet
        facebook_likes_placeholder = 0 # not scaped yet
        
        for idx in range(len(pandadf)):
            value_str = ("\"" + str(pandadf.name[idx]) + "\",\"" + str(pandadf.address[idx]) + "\",\"" 
                         + str(pandadf.city[idx]) + "\",\"" + str(pandadf.link[idx]) + "\",\"" + str(pandadf.bbb_link[idx])
                         + "\",\"" + str(pandadf.facebook_link[idx]) + "\",\"" + str(pandadf.twitter_link[idx]) + "\",\""
                         + str(pandadf.bbb_accred[idx])+ "\",\"" + str(char_nav_score_placeholder) + "\",\"" + str(facebook_likes_placeholder) 
                         + "\",\"" + str(pandadf.twitter_followers[idx]) + "\"")
            cur.execute("INSERT INTO charities_sql(name, address, city, link, bbb_link, facebook_link, twitter_link, bbb_accred, \
                        char_nav_score, facebook_likes, twitter_followers) VALUES(" + value_str + ")")
        
        cur.execute("SELECT * FROM charities_sql")
        rows = cur.fetchall()
        #for row in rows:
            #print row

    return rows

sqlrows = convert_to_sql(panda_char)
# sqlrows now has the rows of the SQL table, mainly for debuggin
